package com.demo.jullia.springApp;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import java.util.List;

@Controller
public class UserController {

    @Autowired
    JdbcTemplate jdbcTemplate;

    @GetMapping("/register-form")
    public ModelAndView registerAction(@RequestParam("email") String email,
                                       @RequestParam("password") String password,
                                       @RequestParam("password-again") String password2){
        ModelAndView modelAndView = new ModelAndView("register");

        //ce facem daca parolele sunt identice?
        //daca totul este ok, salvam in bd
        if(!password.equals(password2)){
            modelAndView.addObject("message", "Parolele nu sunt identice");
        } else {
            //salvare in baza de date
            jdbcTemplate.update("insert into users values(null, ?,?)", email, password);
        }

        //redirectioneaza user-ul catre pagina index.html
        return new ModelAndView("redirect:index.html");
    }

    @GetMapping("/register")
    public ModelAndView register(){
        return new ModelAndView("register");

    }

    @GetMapping("/login")
    public ModelAndView login(@RequestParam("email") String email,
                              @RequestParam("password") String password) {
        ModelAndView modelAndView = new ModelAndView("index");

        //cum fac loginul? cum verific daca utilizatorul este inregistrat?
        List<User> userList = jdbcTemplate.query("select * from users where email=" + email + ";", new UserRowMapper());
        if(userList.size() == 0){
            modelAndView.addObject("message", "Credentialele sunt corecte");
        }
        if(userList.size() > 1){
            modelAndView.addObject("message", "Credentialele nu sunt corecte");
        }

        if(userList.size() == 1){
            User userFromDatabase = userList.get(0);
            if(!userFromDatabase.getPassword().equals(password)){
                modelAndView.addObject("message", "Credentialele nu sunt corecte");
            } else {
                modelAndView = new ModelAndView("redirect:/dashboard");
            }
        }
        return modelAndView;
    }

    @GetMapping("dashboard")
    public ModelAndView dashboard(){
        //cum verific daca user-ul este logat sau nu?
        return new ModelAndView("dashboard");
    }
}
